name: "Tracy build artifacts"
description: "Builds tt-metal with tracy profiling"
runs:
  using: "composite"
  steps:
    - name: Docker Cleanup
      shell: bash
      run: |
        docker system prune -a -f
        df -h  # Debug space

    - name: Install dependencies
      shell: bash
      run: |
        apt upgrade -y && apt update -y
        apt install -y cmake python3 python3-venv python3-pip git-lfs ccache gcc-12 g++-12

        git config --global --add safe.directory /home/ubuntu/actions-runner/_work/pytorch2.0_ttnn/pytorch2.0_ttnn
        git config --global --add safe.directory /__w/pytorch2.0_ttnn/pytorch2.0_ttnn

        git submodule init
        git submodule sync
        git submodule update --init --recursive
        git submodule foreach 'git lfs fetch --all && git lfs pull'

        # Remove hugepages setup from install_dependencies.sh
        sed -i '/^configure_hugepages() {/,/^}/c\configure_hugepages() {\n    echo "Skip hugepages installation"\n}' ./torch_ttnn/cpp_extension/third-party/tt-metal/install_dependencies.sh
        ./torch_ttnn/cpp_extension/third-party/tt-metal/install_dependencies.sh

    - name: Install python dependencies
      shell: bash
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip config set global.extra-index-url https://download.pytorch.org/whl/cpu
        python3 -m pip install -r requirements-dev.txt
        python3 -m pip install pytest-github-report

        pip install --force-reinstall pip==21.2.4
        python3 -m pip install numpy setuptools wheel
        python3 -m pip install -e .

    - name: Build C++ Extensions
      shell: bash
      run: |
        cd torch_ttnn/cpp_extension
        ./build_tt_metal_tracy.sh

    - name: Upload Build Artifacts
      shell: bash
      run: |
        cd torch_ttnn/cpp_extension
        PYTHON_LIB_SUFFIX=$(python3 -c "import importlib.machinery; print(importlib.machinery.EXTENSION_SUFFIXES[0])")
        mkdir -p $CACHE_DIR
        CCACHE_DIR=$(ccache --get-config cache_dir)
            
        # cpp-extension cache
        cp -r build $CACHE_DIR 
        cp -r ttnn_device_extension${PYTHON_LIB_SUFFIX} $CACHE_DIR 

        # tt-metal cache
        mkdir -p $CACHE_DIR/tt-metal
        cp -r third-party/tt-metal/build_tracy $CACHE_DIR/tt-metal/
        cp -r third-party/tt-metal/.cpmcache $CACHE_DIR/tt-metal/

        # ccache
        cp -r $CCACHE_DIR $CACHE_DIR 