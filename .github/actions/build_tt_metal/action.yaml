name: "Building tt-metal"
description: "Builds tt-metal and overwrite existing ttnn install"
inputs:
  build_tt_metal_args:
    description: 'Flags to pass to build_tt_metal.sh'
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Docker Cleanup
      shell: bash
      run: |
        docker system prune -a -f
        df -h  # Debug space

    - name: Install dependencies
      shell: bash
      run: |
        apt upgrade -y && apt update -y
        apt install -y cmake python3 python3-venv python3-pip git-lfs ccache gcc-12 g++-12

        git config --global --add safe.directory /home/ubuntu/actions-runner/_work/pytorch2.0_ttnn/pytorch2.0_ttnn
        git config --global --add safe.directory /__w/pytorch2.0_ttnn/pytorch2.0_ttnn

        # Remove hugepages setup from install_dependencies.sh
        sed -i '/^configure_hugepages() {/,/^}/c\configure_hugepages() {\n    echo "Skip hugepages installation"\n}' ./tools/third-party/tt-metal/install_dependencies.sh
        ./tools/third-party/tt-metal/install_dependencies.sh

    - name: Install python dependencies
      shell: bash
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip config set global.extra-index-url https://download.pytorch.org/whl/cpu
        python3 -m pip install -r requirements-dev.txt
        python3 -m pip install pytest-github-report

        pip install --force-reinstall pip==21.2.4
        python3 -m pip install numpy setuptools wheel
        python3 -m pip install -e .

    - name: Setup submodules
      shell: bash
      run: |
        git rev-parse HEAD
        cat .gitmodules

        git submodule sync
        git submodule update --init --recursive
        git submodule foreach 'git lfs fetch --all && git lfs pull'

    - name: Build C++ Extensions
      shell: bash
      run: |
        echo "CURRENT_DIR: $(pwd)"
        echo "build_tt_metal_args: ${{ inputs.build_tt_metal_args }}"

        ./tools/build_tt_metal.sh ${{ inputs.build_tt_metal_args }}

        # Copy to NFS cache directory
        rm -rf $CACHE_DIR/tt-metal

        # tt-metal cache
        cp -r tools/third-party/tt-metal $CACHE_DIR/
        ls -la $CACHE_DIR/tt-metal

        cd ${{ github.workspace }}
